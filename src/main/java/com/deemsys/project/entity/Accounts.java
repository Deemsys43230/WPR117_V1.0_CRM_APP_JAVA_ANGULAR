package com.deemsys.project.entity;
// Generated Jun 8, 2017 3:28:30 PM by Hibernate Tools 5.2.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Accounts generated by hbm2java
 */
@Entity
@Table(name = "accounts", catalog = "CRM_boardman")
public class Accounts implements java.io.Serializable {

	private String accountId;
	private PoliceDepartment policeDepartment;
	private String firstName;
	private String lastName;
	private String middleName;
	private String emailId;
	private String phoneNumber;
	private Date addedDateTime;
	private Integer status;
	private Integer isDeleted;
	private Set<Users> userses = new HashSet<Users>(0);
	private Set<CrashReports> crashReportses = new HashSet<CrashReports>(0);

	public Accounts() {
	}

	public Accounts(String accountId) {
		this.accountId = accountId;
	}

	public Accounts(String accountId, PoliceDepartment policeDepartment, String firstName, String lastName,
			String middleName, String emailId, String phoneNumber, Date addedDateTime, Integer status,
			Integer isDeleted, Set<Users> userses, Set<CrashReports> crashReportses) {
		this.accountId = accountId;
		this.policeDepartment = policeDepartment;
		this.firstName = firstName;
		this.lastName = lastName;
		this.middleName = middleName;
		this.emailId = emailId;
		this.phoneNumber = phoneNumber;
		this.addedDateTime = addedDateTime;
		this.status = status;
		this.isDeleted = isDeleted;
		this.userses = userses;
		this.crashReportses = crashReportses;
	}

	@Id

	@Column(name = "account_id", unique = true, nullable = false, length = 32)
	public String getAccountId() {
		return this.accountId;
	}

	public void setAccountId(String accountId) {
		this.accountId = accountId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "police_department_id")
	public PoliceDepartment getPoliceDepartment() {
		return this.policeDepartment;
	}

	public void setPoliceDepartment(PoliceDepartment policeDepartment) {
		this.policeDepartment = policeDepartment;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "middle_name", length = 45)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "email_id", length = 60)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "phone_number", length = 20)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "added_date_time", length = 19)
	public Date getAddedDateTime() {
		return this.addedDateTime;
	}

	public void setAddedDateTime(Date addedDateTime) {
		this.addedDateTime = addedDateTime;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "is_deleted")
	public Integer getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Integer isDeleted) {
		this.isDeleted = isDeleted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accounts")
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accounts")
	public Set<CrashReports> getCrashReportses() {
		return this.crashReportses;
	}

	public void setCrashReportses(Set<CrashReports> crashReportses) {
		this.crashReportses = crashReportses;
	}

}
