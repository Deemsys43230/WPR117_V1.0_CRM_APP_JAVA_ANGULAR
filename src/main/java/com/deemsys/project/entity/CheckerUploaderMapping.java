package com.deemsys.project.entity;

// Generated 5 Apr, 2017 1:14:47 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CheckerUploaderMapping generated by hbm2java
 */
@Entity
@Table(name = "checker_uploader_mapping", catalog = "CRM")
public class CheckerUploaderMapping implements java.io.Serializable {

	private CheckerUploaderMappingId id;
	private Accounts accountsByUploaderAccountId;
	private Accounts accountsByCheckerAccountId;
	private Integer status;

	public CheckerUploaderMapping() {
	}

	public CheckerUploaderMapping(CheckerUploaderMappingId id,
			Accounts accountsByUploaderAccountId,
			Accounts accountsByCheckerAccountId) {
		this.id = id;
		this.accountsByUploaderAccountId = accountsByUploaderAccountId;
		this.accountsByCheckerAccountId = accountsByCheckerAccountId;
	}

	public CheckerUploaderMapping(CheckerUploaderMappingId id,
			Accounts accountsByUploaderAccountId,
			Accounts accountsByCheckerAccountId, Integer status) {
		this.id = id;
		this.accountsByUploaderAccountId = accountsByUploaderAccountId;
		this.accountsByCheckerAccountId = accountsByCheckerAccountId;
		this.status = status;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "uploaderAccountId", column = @Column(name = "uploader_account_id", nullable = false, length = 32)),
			@AttributeOverride(name = "checkerAccountId", column = @Column(name = "checker_account_id", nullable = false, length = 32)) })
	public CheckerUploaderMappingId getId() {
		return this.id;
	}

	public void setId(CheckerUploaderMappingId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uploader_account_id", nullable = false, insertable = false, updatable = false)
	public Accounts getAccountsByUploaderAccountId() {
		return this.accountsByUploaderAccountId;
	}

	public void setAccountsByUploaderAccountId(
			Accounts accountsByUploaderAccountId) {
		this.accountsByUploaderAccountId = accountsByUploaderAccountId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "checker_account_id", nullable = false, insertable = false, updatable = false)
	public Accounts getAccountsByCheckerAccountId() {
		return this.accountsByCheckerAccountId;
	}

	public void setAccountsByCheckerAccountId(
			Accounts accountsByCheckerAccountId) {
		this.accountsByCheckerAccountId = accountsByCheckerAccountId;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

}
